# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" "rtsx_pci_sdmmc"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-intel"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/d0e8fe0a-f44c-4183-81d9-b2dad2a41994";
    fsType = "btrfs";
    options = ["subvol=root"];
  };

  fileSystems."/root" = {
    device = "/dev/disk/by-uuid/d0e8fe0a-f44c-4183-81d9-b2dad2a41994";
    fsType = "btrfs";
    options = ["subvol=home_root"];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/d0e8fe0a-f44c-4183-81d9-b2dad2a41994";
    fsType = "btrfs";
    options = ["subvol=home"];
  };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/d0e8fe0a-f44c-4183-81d9-b2dad2a41994";
    fsType = "btrfs";
    options = ["subvol=nix"];
  };

  fileSystems."/.snapshots" = {
    device = "/dev/disk/by-uuid/d0e8fe0a-f44c-4183-81d9-b2dad2a41994";
    fsType = "btrfs";
    options = ["subvol=snapshots"];
  };

  fileSystems."/opt" = {
    device = "/dev/disk/by-uuid/d0e8fe0a-f44c-4183-81d9-b2dad2a41994";
    fsType = "btrfs";
    options = ["subvol=opt"];
  };

  fileSystems."/srv" = {
    device = "/dev/disk/by-uuid/d0e8fe0a-f44c-4183-81d9-b2dad2a41994";
    fsType = "btrfs";
    options = ["subvol=srv"];
  };

  fileSystems."/swap" = {
    device = "/dev/disk/by-uuid/d0e8fe0a-f44c-4183-81d9-b2dad2a41994";
    fsType = "btrfs";
    options = ["subvol=swap"];
  };

  fileSystems."/tmp" = {
    device = "/dev/disk/by-uuid/d0e8fe0a-f44c-4183-81d9-b2dad2a41994";
    fsType = "btrfs";
    options = ["subvol=tmp"];
  };

  fileSystems."/var" = {
    device = "/dev/disk/by-uuid/d0e8fe0a-f44c-4183-81d9-b2dad2a41994";
    fsType = "btrfs";
    options = ["subvol=var"];
  };

  fileSystems."/usr/local" = {
    device = "/dev/disk/by-uuid/d0e8fe0a-f44c-4183-81d9-b2dad2a41994";
    fsType = "btrfs";
    options = ["subvol=usr_local"];
  };

  fileSystems."/var/tmp" = {
    device = "/dev/disk/by-uuid/d0e8fe0a-f44c-4183-81d9-b2dad2a41994";
    fsType = "btrfs";
    options = ["subvol=var"];
  };

  fileSystems."/var/lib/machines" = {
    device = "/dev/disk/by-uuid/d0e8fe0a-f44c-4183-81d9-b2dad2a41994";
    fsType = "btrfs";
    options = ["subvol=var"];
  };

  fileSystems."/var/lib/libvirt/images" = {
    device = "/dev/disk/by-uuid/d0e8fe0a-f44c-4183-81d9-b2dad2a41994";
    fsType = "btrfs";
    options = ["subvol=var"];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/2BDA-C0A8";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
